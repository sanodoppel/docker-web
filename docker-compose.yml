version: '2'

services:

    nginx:
        container_name: nginx
        build: nginx
        ports:
            - 10.5.0.1:80:80
            - 127.0.0.1:80:80
        volumes_from:
            - php
        volumes:
            - ./logs/nginx/:/var/log/nginx
        networks:
            vpcbr:
                ipv4_address: 10.5.0.2

    php:
        container_name: phpfpm
        build:
            context: php7-fpm
            args:
                TIMEZONE: ${TIMEZONE}
        networks:
            vpcbr:
                ipv4_address: 10.5.0.3
        volumes:
            - ${APP_PATH}:/var/www
            - ./logs/symfony:/var/www/symfony/app/logs
        links:
            - redis
            - db
        environment:
            XDEBUG_CONFIG: remote_host=${IP_ADDRESS}

    db:
        container_name: pgsql
        image: postgres:12
        volumes:
            - ./dump:/dump
            - ./data/postgresql:/var/lib/postgresql
            - ./init.sql:/docker-entrypoint-initdb.d/init.sql

        environment:
            POSTGRES_DB: ${DB}
            POSTGRES_USER: ${DB_USER}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
        ports:
            - 10.5.0.1:5432:5432
            - 127.0.0.1:5432:5432
        networks:
            vpcbr:
                ipv4_address: 10.5.0.4

#    db:
#        container_name: mysql
#        image: mysql
#        command:
#            - "--default-authentication-plugin=mysql_native_password"
#        volumes:
#            - ./dump:/dump
#            - ./data/mysql:/var/lib/mysql
#            - ./init.sql:/docker-entrypoint-initdb.d/init.sql
#        environment:
#            MYSQL_USER: ${MYSQL_USER}
#            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
#            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
#        ports:
#            - 10.5.0.1:3306:3306
#            - 127.0.0.1:3306:3306
#        networks:
#            vpcbr:
#                ipv4_address: 10.5.0.4

    redis:
        container_name: redis
        image: redis:alpine
        ports:
            - 10.5.0.1:6379:6379
            - 127.0.0.1:6379:6379
        networks:
            vpcbr:
                ipv4_address: 10.5.0.5

#    sentry:
#        container_name: sentry
#        image: sentry
#        env_file:
#            - sentry.env
#        ports:
#            - 10.5.0.1:9000:9000
#            - 127.0.0.1:9000:9000
#        depends_on:
#            - db
#            - redis
#        networks:
#            vpcbr:
#                ipv4_address: 10.5.0.6
#
#    cron:
#        container_name: sentry-cron
#        image: sentry
#        env_file:
#            - sentry.env
#        command: run cron
#        depends_on:
#            - db
#            - redis
#        networks:
#            vpcbr:
#                ipv4_address: 10.5.0.7
#
#    worker:
#        container_name: sentry-worker
#        image: sentry
#        env_file:
#            - sentry.env
#        command: run worker
#        depends_on:
#            - db
#            - redis
#        networks:
#            vpcbr:
#                ipv4_address: 10.5.0.8

    adminer:
        container_name: adminer
        image: adminer
        ports:
            - 10.5.0.1:8080:8080
            - 127.0.0.1:8080:8080

networks:
    vpcbr:
        driver: bridge
        ipam:
            config:
            - subnet: 10.5.0.0/16
              gateway: 10.5.0.1
